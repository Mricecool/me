
1.生成客户端keystore,因为客户端andoird不能用keystore格式的密钥库，所以先生成jks格式，再用Portecle工具转成bks格式
keytool -genkeypair -alias client -keyalg RSA -validity 3650 -keypass 123456 -storepass 123456 -keystore client.jks

2.生成服务端keystore
keytool -genkeypair -alias server -keyalg RSA -validity 3650 -keypass 123456 -storepass 123456 -keystore server.jks

3.导出客户端证书
keytool -export -alias client -file client.cer -keystore client.jks -storepass 123456 

4.导出服务端证书
keytool -export -alias server -file server.cer -keystore server.jks -storepass 123456
 
5.重点：证书交换，
将客户端证书导入服务端keystore中，再将服务端证书导入客户端keystore中， 一个keystore可以导入多个证书，生成证书列表

生成客户端信任证书库(由服务端证书生成的证书库)

keytool -import -v -alias server -file E:\ssl\server.cer -keystore E:\ssl\truststore.jks -storepass 123456

将客户端证书导入到服务器证书库(使得服务器信任客户端证书)

keytool -import -v -alias client -file E:\ssl\client.cer -keystore E:\ssl\server.jks -storepass 123456

6.查看证书库中的全部证书
keytool -list -keystore E:\ssl\server.keystore -storepass 123456
7.配置服务器
修改server.xml文件

备注： - keystoreFile：指定服务器密钥库，可以配置成绝对路径，如“D:/key/server.keystore”，本例中是在Tomcat目录中创建了一个名- 称为key的文件夹，仅供参考。 - keystorePass：密钥库生成时的密码 - truststoreFile：受信任密钥库，和密钥库相同即可 - truststorePass：受信任密钥库密码

8.用Portecle工具，运行protecle.jar将client.jks和truststore.jks分别转换成client.bks和truststore.bks,然后放到android客户端的assert目录下,详见Demo